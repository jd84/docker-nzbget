name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: nzbget

jobs:
  Push image to GitHub Packages.
  See also https://docs.docker.com/docker-hub/builds/
  amd64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "arm64v8-${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=arm64v8-latest

          # Set output parameters.
          echo ::set-output name=IMAGE_ID::${IMAGE_ID}
          echo ::set-output name=VERSION::${VERSION}

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        if: github.event_name == 'push'
        run: |
          docker tag $IMAGE_NAME ${{ steps.prep.outputs.IMAGE_ID }}:${{ steps.prep.outputs.VERSION }}
          docker push ${{ steps.prep.outputs.IMAGE_ID }}:${{ steps.prep.outputs.VERSION }}

  aarch64:
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "arm64v8-${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=arm64v8-latest

          # Set output parameters.
          echo ::set-output name=IMAGE_ID::${IMAGE_ID}
          echo ::set-output name=VERSION::${VERSION}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build image
        run: |
          docker buildx build --platform linux/arm64 -f Dockerfile.aarch64 . --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        if: github.event_name == 'push'
        run: |
          docker tag $IMAGE_NAME ${{ steps.prep.outputs.IMAGE_ID }}:${{ steps.prep.outputs.VERSION }}
          docker push ${{ steps.prep.outputs.IMAGE_ID }}:${{ steps.prep.outputs.VERSION }}
